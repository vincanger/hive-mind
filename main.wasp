app HiveMind {
  title: "HiveMind",
  db: {
    system: PostgreSQL
  },
  dependencies: [
    ("nodemailer", "6.8.0"),
    ("react-icons", "4.6.0"),
    ("react-simple-tooltip", "2.6.3")
  ]
}

job emailSender {
  executor: PgBoss, 
  perform: {
    fn: import { workerFunction } from "@ext/workers/emailSender.js"
  },
  schedule: {
    cron: "0 * * * *" // every hour
  },
  entities: [Task]
}

// [] or ? -- Note: You cannot combine type modifiers - optional lists are not supported.
entity Task {=psl
    id          Int       @id @default(autoincrement())
    createdAt   DateTime  @default(now())
    updatedAt   DateTime? @updatedAt  
    name        String    @unique
    status      String    @default("pending")
    message     String
    email       String
    deadline    String
    recurring   Int[]
psl=}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  component: import Main from "@ext/MainPage.js"
}

route About { path: "/about", to: AboutPage }
page AboutPage {
  component: import About from "@ext/AboutPage.js"
}

route Tasks { path: "/tasks", to: TasksPage }
page TasksPage {
  component: import Tasks from "@ext/TasksPage.js"
}

query getPendingTasks {
  fn: import { getPendingTasks } from "@ext/queries.js",
  entities: [Task]
}

query getCompletedTasks {
  fn: import { getCompletedTasks } from "@ext/queries.js",
  entities: [Task]
}

action createTask {
  fn: import { createTask } from "@ext/actions.js",
  entities: [Task]
}
